Сортировка блогов по желаемой целевой аудитории
Дана модель канала youtube, статистики канала. 
Статистика хранится в процентах (поле viewer_percentage), 
например канал1, os linux, 30%. Что означает, что 30 процентов 
подписчиков канала использует операционную систему linux. 
Конкретные значения именований статистик не важны, можно 
к ним относиться как тегам.


На вход подается набор данных, характеризующих целевую 
аудиторию заказчика. Например
Country_code = ‘RU’
Age_group = ‘13-25’
Gender = ‘Female’
Device_type = ‘mobile’
Os = ‘Android’


Нужно отсортировать каналы youtube от максимального значения 
целевой аудитории к минимальному. Целевая аудитория будет 
получаться как view_rate (количество просмотров на канале) * 
процент людей из россии * процент людей от 13 до 25 лет * 
процент женщин * процент с мобильных телефонов * процент 
пользователей с андроид.


class Youtube(models.Model):
   name = models.CharField(max_length=255)
   title = models.TextField(blank=True, null=True)
   view_rate = models.DecimalField(default=0, max_digits=14, decimal_places=7)



class YoutubeGeoAnalytics(models.Model):
   class Meta:
       unique_together = (('youtube_channel', 'country_code', ),)


   youtube_channel = models.ForeignKey(Youtube, related_name='geo')
   country_code = models.CharField(max_length=5)
   viewer_percentage = models.DecimalField(default=0, max_digits=5, decimal_places=2)



class YoutubeDemographicsAnalytics(models.Model):
   class Meta:
       unique_together = (('youtube_channel', 'age_group', 'gender', ),)


   youtube_channel = models.ForeignKey(Youtube, related_name='demographics')
   age_group = models.CharField(max_length=10)
   gender = models.CharField(max_length=10)
   viewer_percentage = models.DecimalField(default=0, max_digits=5, decimal_places=2)



class YoutubeDeviceAnalytics(models.Model):
   class Meta:
       unique_together = (('youtube_channel', 'device_type', ),)


   youtube_channel = models.ForeignKey(Youtube, related_name='device_views')
   device_type = models.CharField(max_length=50)
   viewer_percentage = models.DecimalField(default=0, max_digits=5, decimal_places=2)



class YoutubeOSAnalytics(models.Model):
   class Meta:
       unique_together = (('youtube_channel', 'os', ),)


   youtube_channel = models.ForeignKey(Youtube, related_name='os_views')
   os = models.CharField(max_length=50)
   viewer_percentage = models.DecimalField(default=0, max_digits=5, decimal_places=2)


Можно предложить любое решение. Можно менять структуру данных, 
использовать чистый SQL, ORM, предложить дополнительные индексы 
считаемые в периодических задачах...


Реализовать простое приложение django + django rest framework
На основе предыдущего задания реализовать приложение. Необходимо 
создать модели YoutubeDemographicsAnalytics и Youtube.
Реализовать на основе этих моделей
•	сортировку по целевой аудитории;
•	фильтрацию по количеству view_rate в Youtube (диапазон значений);
•	Авторизовать доступ только к тем, Youtube объектам у которых id четный.

======================РЕШЕНИЕ================================================
Накидал базу на три канала(VeloBiysk, LiveGarden, AltayNature) ,
три страны (RU, US, CA), три девайса (PC, mobile, tablet),
два гендера (male, female) и три возратсных группы (13-25, 25-50, 51-80)

Таблицу YoutubeDemographicsAnalytics разделил на две
YoutubeSexAnalytics и  YoutubeAgeGroupAnalytics  - так как-то понятнее выглядит


Вход в админку локально:
admin  ==>>  rest-api
Вход в админку на сервере:
admin  ==>>  youtube-rating